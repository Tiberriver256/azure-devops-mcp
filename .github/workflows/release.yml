name: Release Automation

on:
  workflow_dispatch: # Allows manual triggering for testing

permissions:
  contents: write # Allows pushing commits/tags and creating releases

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for standard-version
          token: ${{ secrets.RELEASE_PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*' # Use the project's LTS Node version
          registry-url: 'https://registry.npmjs.org/'

      - name: Install Dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Release Bump and Changelog
        run: npm run release -- --commit-all # standard-version determines version based on commits
        # Add --first-release if this is the absolute first tag/release

      - name: Get version from package.json
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Extract changelog content
        id: changelog
        run: |
          VERSION=$(node -p "require('./package.json').version")
          CHANGELOG_CONTENT=$(awk "/### \[$VERSION\]/,/### \[.*\]/ { if (!/### \[.*\]/ || NR==1) print; }" CHANGELOG.md | sed '1d;$d')
          echo "content<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Push changes and tags
        run: git push --follow-tags origin main
        # Ensure this pushes to the correct branch (e.g., main)

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          generate_release_notes: true 
